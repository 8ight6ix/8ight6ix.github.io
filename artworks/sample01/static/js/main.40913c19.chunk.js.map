{"version":3,"sources":["reportWebVitals.ts","modules/animation/model.tsx","modules/hooks/use-sequence.ts","modules/animation/index.ts","modules/animation/parser.ts","components/sequence01/title.tsx","components/sequence01/under-line.tsx","components/sequence01/sub-title.tsx","components/sequence01/lion.tsx","components/sequence01/index.tsx","App.tsx","index.tsx","styles/page/scene01.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Information","row","defRow","_x","_y","_rotate","_scaleX","_scaleY","_marginLeft","_marginTop","_anchor","_visibility","this","x","y","rotate","scaleX","scaleY","marginLeft","marginTop","anchor","visibility","UseSequence","short","progress","target","duration","stageWidth","stageHeight","baseWidth","baseHeight","animationInfo","useState","load","setLoad","useMemo","clientWidth","clientHeight","targetWidth","targetHeight","animtions","rows","size","length","animations","Array","Animation","i","parseRowDatas","style","ani","opts","trans","rateW","rateH","toFixed","transition","transform","position","transformOrigin","slice","join","parseStyle","anis","curAni","nextAni","absProgress","Math","abs","cur","next","moveX","parser","moveY","scale","parseAnimation","useEffect","cxScene","classNames","bind","styleScene01","info","data","cuts","title","Title","useRef","titleClass","UseSequnce","current","animation","ref","className","underLine","UnderLine","underLineClass","subTitle","SubTitle","lion","lottieOption","loop","autoplay","animationData","svg","rendererSettings","preserveAspectRatio","Lion","play","setPlay","lionClass","options","isPaused","container","Sequence01","scene","appWidth","appHeight","registAction","setShort","endScene","shortDest","startScene","stage","containerClass","stageClass","shortNext","setTimeout","isFinish","nextShort","App","document","body","width","setWidth","height","setHeight","setScene","setProgress","actionFlag","eventFalg","actionCnt","wheelStop","isMaxScene","totalScene","isMinScene","moveNextScene","useCallback","movePrevScene","regist","renderProgress","delta","deletaSensitive","actionStart","wheelCallback","e","window","requestAnimationFrame","deltaY","clearTimeout","resize","addEventListener","removeEventListener","onWheel","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.40913c19.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface InformationRowData {\n  x?: number;\n  y?: number;\n  rotate?: number;\n  scaleX?: number;\n  scaleY?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  anchor?: string[];\n  visibility?: boolean;\n}\n\nclass Information {\n  private _x: number;\n\n  private _y: number;\n\n  private _rotate: number;\n\n  private _scaleX: number;\n\n  private _scaleY: number;\n\n  private _marginLeft: number;\n\n  private _marginTop: number;\n\n  private _anchor: string[];\n\n  private _visibility: boolean;\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get rotate() {\n    return this._rotate;\n  }\n\n  get scaleX() {\n    return this._scaleX;\n  }\n\n  get scaleY() {\n    return this._scaleY;\n  }\n\n  get marginLeft() {\n    return this._marginLeft;\n  }\n\n  get marginTop() {\n    return this._marginTop;\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  constructor(row: InformationRowData, defRow?: Information) {\n    this._x = row.x ?? defRow?.x ?? 0;\n    this._y = row.y ?? defRow?.y ?? 0;\n    this._rotate = row.rotate ?? defRow?.rotate ?? 0;\n    this._scaleX = row.scaleX ?? defRow?.scaleX ?? 1;\n    this._scaleY = row.scaleY ?? defRow?.scaleY ?? 1;\n    this._marginLeft = row.marginLeft ?? defRow?._marginLeft ?? 0;\n    this._marginTop = row.marginTop ?? defRow?._marginTop ?? 0;\n    this._anchor = row.anchor ?? defRow?.anchor ?? ['center'];\n    this._visibility = row.visibility ?? defRow?.visibility ?? true;\n  }\n}\n\nexport default Information;\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { InformationRowData } from 'modules/animation/model';\nimport { parseRowDatas, parseAnimation, parseStyle } from 'modules/animation';\n\ninterface UseSequenceProps {\n  key?: string; // For Debug\n  short: number;\n  progress: number;\n  target: HTMLElement | null;\n  duration: number;\n  stageWidth: number;\n  stageHeight: number;\n  baseWidth: number;\n  baseHeight: number;\n  animationInfo: InformationRowData[];\n}\n\nfunction UseSequence({\n  // key,\n  short,\n  progress,\n  target,\n  duration,\n  stageWidth,\n  stageHeight,\n  baseWidth,\n  baseHeight,\n  animationInfo,\n}: UseSequenceProps) {\n  const [load, setLoad] = useState(false);\n\n  // useMemo로 stage의 가로 세로가 바뀌었을 때 target의 사이즈를 재 측정하게 해봤다.\n  // window의 사이즈가 변했을 때 채 container 와의 target clinet 사이즈가 바뀌어있지 않다.\n  // Traget의 사이즈를 수집합니다.\n  const [targetWidth, targetHeight] = useMemo(() => {\n    if (!target) return [0, 0];\n    return [target.clientWidth, target.clientHeight];\n  }, [target, stageWidth, stageHeight]);\n\n  // Animation 정보를 활용해 Transform Style Object를 만듭니다.\n  const animtions = useMemo(() => parseRowDatas(animationInfo), []);\n  const style = useMemo(() => {\n    const ani = parseAnimation(short, progress, animtions); // progress 수치를 대입한 새로운 Animation 객체를 생성합니다.\n    const trans = load && short > 0; // 로드가 완료되지 않았거나, 첫 short일 떄는 transition이 필요하지 않습니다.\n    const opts = { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight };\n    return parseStyle(ani, load, opts);\n  }, [short, progress, animtions, load, duration, baseWidth, baseHeight, targetWidth, targetHeight]);\n\n  // Component가 Load되면 사이즈 재 측정 등의 로직을 수행해야 합니다.\n  useEffect(() => {\n    setLoad(true);\n  }, []);\n\n  return { load, style, targetWidth, targetHeight };\n}\n\nexport default UseSequence;\n","import React from 'react';\nimport Animation, { InformationRowData } from 'modules/animation/model';\nimport * as parser from 'modules/animation/parser';\n\ninterface ParseStyleParma {\n  trans: boolean;\n  duration: number;\n  baseWidth: number;\n  baseHeight: number;\n  stageWidth: number;\n  stageHeight: number;\n  targetWidth: number;\n  targetHeight: number;\n}\n\n// Row Data 리스트를 Information 리스트로 파싱합니다.\nexport function parseRowDatas(rows: InformationRowData[]) {\n  const size = rows.length;\n  const animations = Array<Animation>(size);\n\n  if (size > 0) {\n    // 존재하지 않는 Animation Row Data는 이전 Data의 것을 그대로 사용합니다.\n    animations[0] = new Animation(rows[0]);\n    for (let i = 1; i < size; i += 1) {\n      animations[i] = new Animation(rows[i], animations[i - 1]);\n    }\n  }\n\n  return animations;\n}\n\n// 이전 스타일 객체에서 Short가 진행된 만큼 변화가 반영된 Style 객체를 반환합니다.\nexport function parseAnimation(short: number, progress: number, anis: Animation[]) {\n  if (short <= 0 && progress <= 0) return anis[0]; // 더이상 뒤로갈 에니메이션이 없는 경우\n  if (short >= anis.length - 1 && progress >= 0) return anis[anis.length - 1]; // 더이상 앞으로갈 에니메이션이 없는 경우\n  if (progress === 0) return anis[short]; // progress가 0인 경우\n\n  const curAni = anis[short];\n  const nextAni = progress >= 0 ? anis[short + 1] : anis[short - 1];\n  const absProgress = Math.abs(progress);\n\n  const { visibility } = nextAni;\n  const x = parser.parseX(curAni, nextAni, absProgress);\n  const y = parser.parseY(curAni, nextAni, absProgress);\n  const rotate = parser.parseRotate(curAni, nextAni, absProgress);\n  const scaleX = parser.parseScaleX(curAni, nextAni, absProgress);\n  const scaleY = parser.parseScaleY(curAni, nextAni, absProgress);\n  const marginLeft = parser.parseMarginLeft(curAni, nextAni, absProgress);\n  const marginTop = parser.parseMarginTop(curAni, nextAni, absProgress);\n  const anchor = parser.parseAnchor(curAni, nextAni, absProgress);\n\n  return new Animation({ x, y, rotate, scaleX, scaleY, marginLeft, marginTop, anchor, visibility });\n}\n\n// 스타일 객체를 React Component Style Object로 파싱합니다.\nexport function parseStyle(ani: Animation, load: boolean, opts: ParseStyleParma): React.CSSProperties {\n  const { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight } = opts;\n\n  const rateW = stageWidth / baseWidth;\n  const rateH = stageHeight / baseHeight;\n\n  const x = (ani.x * rateW).toFixed(2);\n  const y = (ani.y * rateH).toFixed(2);\n  const marginLeft = ((targetWidth * ani.marginLeft) / 100).toFixed(2);\n  const marginTop = ((targetHeight * ani.marginTop) / 100).toFixed(2);\n\n  const visibility = load && ani.visibility ? 'visible' : 'hidden';\n  const transition = trans ? `all ${duration / 1000}s cubic-bezier(0.2, 0.2, 0, 1)` : 'none';\n  const transform = [`translate(${x}px, ${y}px)`, `rotate(${ani.rotate}deg)`, `scale(${ani.scaleX}, ${ani.scaleY})`];\n  const anchor = ani.anchor.slice(0, 2);\n\n  return {\n    position: 'absolute',\n    visibility,\n    transition,\n    transformOrigin: anchor.join(' '),\n    transform: transform.join(' '),\n    marginLeft: `${marginLeft}px`,\n    marginTop: `${marginTop}px`,\n  };\n}\n","import Animation from 'modules/animation/model';\n\n// 변화를 반영한 X 값을 반환합니다.\nexport function parseX(cur: Animation, next: Animation, progress: number) {\n  const moveX = ((next.x - cur.x) * progress) / 100;\n  return cur.x + moveX;\n}\n\n// 변화를 반영한 Y 값을 반환합니다.\nexport function parseY(cur: Animation, next: Animation, progress: number) {\n  const moveY = ((next.y - cur.y) * progress) / 100;\n  return cur.y + moveY;\n}\n\n// 변화를 반영한 Rotate 값을 반환합니다.\nexport function parseRotate(cur: Animation, next: Animation, progress: number) {\n  const rotate = ((next.rotate - cur.rotate) * progress) / 100;\n  return cur.rotate + rotate;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleX(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleX - cur.scaleX) * progress) / 100;\n  return cur.scaleX + scale;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleY(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleY - cur.scaleY) * progress) / 100;\n  return cur.scaleY + scale;\n}\n\n// 변화를 반영한 Anchor 값을 반환합니다.\nexport function parseAnchor(cur: Animation, next: Animation, progress: number) {\n  return progress >= 0 ? cur.anchor : next.anchor;\n}\n\nexport function parseMarginLeft(cur: Animation, next: Animation, progress: number) {\n  const marginLeft = ((next.marginLeft - cur.marginLeft) * progress) / 100;\n  return cur.marginLeft + marginLeft;\n}\n\nexport function parseMarginTop(cur: Animation, next: Animation, progress: number) {\n  const marginTop = ((next.marginTop - cur.marginTop) * progress) / 100;\n  return cur.marginTop + marginTop;\n}\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.title;\n\ninterface TitleProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction Title({ short, progress, stageWidth, stageHeight }: TitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('title', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    baseWidth: info.baseWidth,\n    baseHeight: info.baseHeight,\n    animationInfo: info.animation,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      Aesop’s Fables\n    </span>\n  );\n}\n\nexport default Title;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.underLine;\n\ninterface UnderLineProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction UnderLine({ short, progress, stageWidth, stageHeight }: UnderLineProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const underLineClass = useMemo(() => cxScene('under-line', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    baseWidth: info.baseWidth,\n    baseHeight: info.baseHeight,\n    animationInfo: info.animation,\n  });\n\n  return <div className={underLineClass} style={style} ref={target} />;\n}\n\nexport default UnderLine;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.subTitle;\n\ninterface SubTitleProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction SubTitle({ short, progress, stageWidth, stageHeight }: SubTitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('sub-title', 'font-title-ko'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    baseWidth: info.baseWidth,\n    baseHeight: info.baseHeight,\n    animationInfo: info.animation,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      이솝 이야기: 늑대의 흉계\n    </span>\n  );\n}\n\nexport default SubTitle;\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\nimport classNames from 'classnames/bind';\nimport Lottie from 'react-lottie';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/lion.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.lion;\n\ninterface LionProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nconst lottieOption = {\n  loop: true,\n  autoplay: true,\n  animationData: svg,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nfunction Lion({ short, progress, stageWidth, stageHeight }: LionProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const [play, setPlay] = useState<boolean>(false);\n  const lionClass = useMemo(() => cxScene('lion', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    baseWidth: info.baseWidth,\n    baseHeight: info.baseHeight,\n    animationInfo: info.animation,\n  });\n\n  useEffect(() => {\n    setPlay(short < 3);\n  }, [short]);\n\n  return (\n    <div style={style} ref={target} className={lionClass}>\n      <Lottie options={lottieOption} isPaused={!play} />\n    </div>\n  );\n}\n\nexport default Lion;\n","import React, { useMemo, useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nimport Title from 'components/sequence01/title';\nimport UnderLine from 'components/sequence01/under-line';\nimport SubTitle from 'components/sequence01/sub-title';\nimport Lion from 'components/sequence01/lion';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.container;\n\ninterface Sequence01rops {\n  scene: number;\n  progress: number;\n  appWidth: number;\n  appHeight: number;\n  registAction: (regist: boolean) => void;\n}\n\nfunction Sequence01({ scene, progress, appWidth, appHeight, registAction }: Sequence01rops) {\n  const [short, setShort] = useState(0); // 현재 Sequence Short 번호\n  const endScene = useMemo(() => data.shortDest.length + data.startScene, []); // 더이상 진행할 내용일 없는 Scene 번호\n\n  const container = useRef<HTMLDivElement>(null);\n  const stage = useRef<HTMLDivElement>(null);\n\n  const containerClass = useMemo(() => cxScene('container'), []);\n  const stageClass = useMemo(() => cxScene('stage'), []);\n\n  const { load, style, targetWidth, targetHeight } = UseSequnce({\n    short,\n    progress,\n    target: container.current,\n    duration: data.duration,\n    stageWidth: appWidth,\n    stageHeight: appHeight,\n    baseWidth: info.baseWidth,\n    baseHeight: info.baseHeight,\n    animationInfo: info.animation,\n  });\n\n  //  하위 컴포너트가 필요한 것은 Container의 사이즈가 아니라 Stage의 사이즈입니다.\n  const [stageWidth, stageHeight] = useMemo(() => {\n    if (!stage.current) return [0, 0];\n    return [stage.current?.clientWidth, stage.current?.clientHeight];\n  }, [stage.current, targetWidth, targetHeight]);\n\n  // Scene에 해당하는 목표 Short 번호에 맞게 다음 Short 번호를 설정합니다.\n  useEffect(() => {\n    if (load && scene < endScene && scene >= data.startScene) {\n      const current = scene - data.startScene;\n      const shortDest = data.shortDest[current];\n\n      if (short !== shortDest) {\n        // Short의 변경이 필요하다면 Action 실행을 등록합니다.\n        const shortNext = shortDest > short ? short + 1 : shortDest;\n        // short가 자동으로 0에서 1로 이동할 때 문제가 발생합니다.\n        // short0 position이 Dom Tree에 반영되기 전에 short1의 posiotn이 렌더되는 것 같습니다.\n        // 결국 한번에 Dom Tree에 반영되고 init -> short0 -> short1이 아니라, 바로 init -> short1이 되는 현상이 일어납니다.\n        // 때문에 Dom Tree 반영을 먼저 시키고 short를 이동하기 위한 수단으로 다음과 같이 setTimeout을 활용합니다.\n        if (short === 0) setTimeout(() => setShort(shortNext), 100);\n        else setShort(shortNext);\n        registAction(true);\n      }\n    }\n  }, [load, scene]);\n\n  // Short가 변경되면 Transalte 동작 후 목표 Short 번호에 맞게 Actrion을 진행합니다.\n  useEffect(() => {\n    if (load) {\n      const shortDest = data.shortDest[scene - 1];\n      const isFinish = shortDest === short;\n      const nextShort = short + 1;\n\n      setTimeout(() => {\n        // Short가 목표치에 도달하면 Action을 종료합니다.\n        if (isFinish) registAction(false);\n        // Short가 목표치에 도달하지 목하면 다음 short로 이동합니다.\n        else setShort(nextShort);\n      }, data.duration);\n    }\n  }, [short]);\n\n  return (\n    <div className={containerClass} style={style} ref={container}>\n      <div className={stageClass} ref={stage}>\n        <Title short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <UnderLine short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <SubTitle short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <Lion short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n      </div>\n    </div>\n  );\n}\n\nexport default Sequence01;\n","import React, { useState, useCallback, useRef, useMemo, useEffect } from 'react';\n\nimport Sequence01 from 'components/sequence01';\nimport animation from 'static/animation/index.json';\nimport 'styles/main.scss';\n\nfunction App() {\n  const [width, setWidth] = useState(document.body.clientWidth); // Application Width\n  const [height, setHeight] = useState(document.body.clientHeight); // Application Height\n\n  const [scene, setScene] = useState(1); // 현재 Scene 번호\n  const [progress, setProgress] = useState(0); // 현재 Scene 진행률\n  const actionFlag = useRef(false); // 앤션 진행 플래그\n  const eventFalg = useRef(false); // 이벤트 디바운스를 플래그\n\n  const actionCnt = useRef<number>(0); // 현재 Action 수행중인 Sequence 갯수\n  const wheelStop = useRef<ReturnType<typeof setTimeout>>(); // 마우스 휠이 멈추면 발생하는 Timeout Event Handler\n  const isMaxScene = useMemo(() => scene === animation.totalScene, [scene]); // 현재 Scene이 마지막인지 여부\n  const isMinScene = useMemo(() => scene === 1, [scene]); // 현재 Scene이 처음인지 여부\n\n  // 다음 Scene을 진행합니다.\n  const moveNextScene = useCallback(() => {\n    if (!isMaxScene) setScene(scene + 1);\n    if (progress) setProgress(0);\n  }, [isMaxScene, scene, progress]);\n\n  // 이전 Scene을 진행합니다.\n  const movePrevScene = useCallback(() => {\n    if (!isMinScene) setScene(scene - 1);\n    if (progress) setProgress(0);\n  }, [isMinScene, scene, progress]);\n\n  // Sequence의 Action 실행/종료를 보고 받습니다.\n  const registAction = useCallback((regist: boolean) => {\n    if (regist) actionCnt.current += 1;\n    else if (actionCnt.current > 0) actionCnt.current -= 1;\n\n    if (actionCnt.current === 0) actionFlag.current = false;\n    else if (actionFlag.current === false) actionFlag.current = true;\n  }, []);\n\n  // 진행률의 변동을 반영합니다.\n  const renderProgress = useCallback(\n    (delta: number) => {\n      // 더이상 진행할 쇼트가 없으면 멈춥니다.\n      const next = progress + delta * animation.deletaSensitive;\n      if (next > 0 && isMaxScene) return;\n      if (next < 0 && isMinScene) return;\n\n      // 진행률이 일장 값 이상 도달하면 다음 Scene으로 이동합니다.\n      if (Math.abs(next) >= animation.actionStart) {\n        actionFlag.current = true;\n        if (next > 0) moveNextScene();\n        else movePrevScene();\n      } else {\n        setProgress(next);\n      }\n    },\n    [progress, isMaxScene, isMinScene],\n  );\n\n  // Wheel의 동작을 처리합니다.\n  const wheelCallback = useCallback(\n    (e: React.WheelEvent<HTMLDivElement>) => {\n      // Flag가 있거나, 수직 변동 값이 없으면 진행하지 않습니다.\n      if (eventFalg.current || actionFlag.current) return;\n\n      window.requestAnimationFrame(() => {\n        // 마우스 움직임을 Process에 반여하고, Event Flag는 제거합니다.\n        eventFalg.current = false;\n        renderProgress(e.deltaY);\n\n        // Action 상태가 아닌데 Wheel이 멈추면 Process를 초기화합니다.\n        if (wheelStop.current) clearTimeout(wheelStop.current);\n        wheelStop.current = setTimeout(() => {\n          if (!actionFlag.current) setProgress(0);\n        }, 100);\n      });\n\n      eventFalg.current = true;\n    },\n    [renderProgress],\n  );\n\n  // Window 사이즈가 조정되면 Sequence Container들을 resize합니다.\n  const resize = useCallback(() => {\n    setWidth(document.body.clientWidth);\n    setHeight(document.body.clientHeight);\n  }, []);\n\n  useEffect(() => {\n    resize();\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, [resize]);\n\n  return (\n    <div className=\"App\" onWheel={wheelCallback}>\n      <Sequence01 scene={scene} progress={progress} appWidth={width} appHeight={height} registAction={registAction} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scene01_container__1T_E7\",\"stage\":\"scene01_stage__dsnc2\",\"title\":\"scene01_title__2i5-l\",\"under-line\":\"scene01_under-line__31CWl\",\"sub-title\":\"scene01_sub-title__1UVJV\",\"lion\":\"scene01_lion__2uMb5\"};"],"sourceRoot":""}