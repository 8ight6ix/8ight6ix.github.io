{"version":3,"sources":["reportWebVitals.ts","modules/animation/model.tsx","modules/hooks/use-sequence.ts","modules/animation/index.ts","modules/animation/parser.ts","components/sequence01/title.tsx","components/sequence01/under-line.tsx","components/sequence01/sub-title.tsx","components/sequence01/lion.tsx","components/sequence01/scroll.tsx","components/sequence01/text.tsx","components/sequence01/index.tsx","modules/helper.ts","App.tsx","index.tsx","styles/page/scene01.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Animation","row","defRow","_x","_y","_rotate","_scaleX","_scaleY","_marginLeft","_marginTop","_anchor","_visibility","_opacity","this","x","y","rotate","scaleX","scaleY","marginLeft","marginTop","anchor","visibility","opacity","opactiy","UseSequence","short","progress","target","duration","shortEnd","stageWidth","stageHeight","data","useState","load","setLoad","baseHeight","baseWidth","animationData","useMemo","clientWidth","clientHeight","targetWidth","targetHeight","animationList","rows","animations","Array","lastAnimation","reduce","prev","cur","i","undefined","length","parseRowDatas","animation","anis","curAni","nextAni","absProgress","Math","abs","next","moveX","parser","moveY","scale","parseAnimation","trans","style","ani","opts","rateW","rateH","toFixed","slice","transform","position","transformOrigin","join","transitionProperty","transitionDuration","transitionTimingFunction","parseStyle","useEffect","cxScene","classNames","bind","styleScene01","info","cuts","title","Title","useRef","titleClass","UseSequnce","current","ref","className","underLine","UnderLine","underLineClass","subTitle","SubTitle","lion","lottieOption","loop","autoplay","svg","rendererSettings","preserveAspectRatio","Lion","play","setPlay","lionClass","options","isPaused","scroll","Scroll","text","Text","textCalss","container","Sequence01","scene","appWidth","appHeight","registAction","setShort","endScene","shortDest","startScene","stage","containerClass","stageClass","shortNext","cb","requestAnimationFrame","isFinish","nextShort","setTimeout","App","document","body","width","setWidth","height","setHeight","setScene","setProgress","actionFlag","eventFalg","actionCnt","wheelStop","isMaxScene","totalScene","isMinScene","moveNextScene","useCallback","movePrevScene","regist","renderProgress","delta","deletaSensitive","actionStart","wheelCallback","e","window","deltaY","clearTimeout","resize","addEventListener","removeEventListener","onWheel","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.92472e6a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface AnimtaionRowData {\n  x?: number;\n  y?: number;\n  rotate?: number;\n  scaleX?: number;\n  scaleY?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  anchor?: string[];\n  visibility?: boolean;\n  opacity?: number;\n}\n\nclass Animation {\n  private _x: number;\n\n  private _y: number;\n\n  private _rotate: number;\n\n  private _scaleX: number;\n\n  private _scaleY: number;\n\n  private _marginLeft: number;\n\n  private _marginTop: number;\n\n  private _anchor: string[];\n\n  private _visibility: boolean;\n\n  private _opacity: number;\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get rotate() {\n    return this._rotate;\n  }\n\n  get scaleX() {\n    return this._scaleX;\n  }\n\n  get scaleY() {\n    return this._scaleY;\n  }\n\n  get marginLeft() {\n    return this._marginLeft;\n  }\n\n  get marginTop() {\n    return this._marginTop;\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  get opactiy() {\n    return this._opacity;\n  }\n\n  constructor(row: AnimtaionRowData, defRow?: Animation) {\n    this._x = row.x ?? defRow?.x ?? 0;\n    this._y = row.y ?? defRow?.y ?? 0;\n    this._rotate = row.rotate ?? defRow?.rotate ?? 0;\n    this._scaleX = row.scaleX ?? defRow?.scaleX ?? 1;\n    this._scaleY = row.scaleY ?? defRow?.scaleY ?? 1;\n    this._marginLeft = row.marginLeft ?? defRow?._marginLeft ?? 0;\n    this._marginTop = row.marginTop ?? defRow?._marginTop ?? 0;\n    this._anchor = row.anchor ?? defRow?.anchor ?? ['center'];\n    this._visibility = row.visibility ?? defRow?.visibility ?? true;\n    this._opacity = row.opacity ?? defRow?.opactiy ?? 100;\n  }\n}\n\nexport default Animation;\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { AnimtaionRowData } from 'modules/animation/model';\nimport { parseRowDatas, parseAnimation, parseStyle } from 'modules/animation';\n\ninterface UseSequenceData {\n  baseWidth: number;\n  baseHeight: number;\n  animationData: AnimtaionRowData[];\n}\n\ninterface UseSequenceProps {\n  short: number;\n  progress: number;\n  target: HTMLElement | null;\n  duration: number;\n  shortEnd: number;\n  stageWidth: number;\n  stageHeight: number;\n  data: UseSequenceData;\n}\n\nfunction UseSequence({ short, progress, target, duration, shortEnd, stageWidth, stageHeight, data }: UseSequenceProps) {\n  const [load, setLoad] = useState(false);\n  const { baseHeight, baseWidth, animationData } = data;\n\n  // Traget의 사이즈를 수집합니다.\n  const [targetWidth, targetHeight] = useMemo(() => {\n    if (!target) return [0, 0];\n    return [target.clientWidth, target.clientHeight];\n  }, [target, stageWidth, stageHeight]);\n\n  /* ********************************** */\n  /* Create Animation CSS Style Object  */\n  /* ********************************** */\n\n  const animationList = useMemo(() => parseRowDatas(animationData, shortEnd), []); // json 데이터를 파싱합니다.\n  const animation = useMemo(() => parseAnimation(short, progress, animationList), [short, progress]); // progress 수치를 대입한 Animation 객체를 생성합니다.\n  const trans = useMemo(() => load && short > 0, [load, short]); // load가 끝나기 전과 첫 short에서는 Transition으 적용하지 않습니다.\n\n  const style = useMemo(() => {\n    const opts = { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight };\n    return parseStyle(animation, load, opts);\n  }, [trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight, animation, load]);\n\n  /* ****************** */\n  /* After Load Action  */\n  /* ****************** */\n\n  // Component가 Load되면 사이즈 재 측정 등의 로직을 수행해야 합니다.\n  useEffect(() => {\n    setLoad(true);\n  }, []);\n\n  return { load, style, targetWidth, targetHeight };\n}\n\nexport default UseSequence;\n","import React from 'react';\nimport Animation, { AnimtaionRowData } from 'modules/animation/model';\nimport * as parser from 'modules/animation/parser';\n\ninterface ParseStyleParma {\n  trans: boolean;\n  duration: number;\n  baseWidth: number;\n  baseHeight: number;\n  stageWidth: number;\n  stageHeight: number;\n  targetWidth: number;\n  targetHeight: number;\n}\n\n// Row Data 리스트를 Information 리스트로 파싱합니다.\nexport function parseRowDatas(rows: AnimtaionRowData[], shortEnd: number) {\n  const animations = Array<Animation>(shortEnd + 1);\n  const lastAnimation = rows.reduce((prev: Animation | undefined, cur, i) => {\n    animations[i] = new Animation(cur, prev);\n    return animations[i];\n  }, undefined);\n\n  for (let i = rows.length; i <= shortEnd; i += 1) {\n    animations[i] = new Animation({}, lastAnimation);\n  }\n\n  return animations;\n}\n\n// 이전 스타일 객체에서 Short가 진행된 만큼 변화가 반영된 Style 객체를 반환합니다.\nexport function parseAnimation(short: number, progress: number, anis: Animation[]) {\n  if (short <= 0 && progress <= 0) return anis[0]; // 더이상 뒤로갈 에니메이션이 없는 경우\n  if (short >= anis.length - 1 && progress >= 0) return anis[anis.length - 1]; // 더이상 앞으로갈 에니메이션이 없는 경우\n  if (progress === 0) return anis[short]; // progress가 0인 경우\n\n  const curAni = anis[short];\n  const nextAni = progress >= 0 ? anis[short + 1] : anis[short - 1];\n  const absProgress = Math.abs(progress);\n\n  const { visibility } = nextAni;\n  const x = parser.parseX(curAni, nextAni, absProgress);\n  const y = parser.parseY(curAni, nextAni, absProgress);\n  const rotate = parser.parseRotate(curAni, nextAni, absProgress);\n  const scaleX = parser.parseScaleX(curAni, nextAni, absProgress);\n  const scaleY = parser.parseScaleY(curAni, nextAni, absProgress);\n  const marginLeft = parser.parseMarginLeft(curAni, nextAni, absProgress);\n  const marginTop = parser.parseMarginTop(curAni, nextAni, absProgress);\n  const anchor = parser.parseAnchor(curAni, nextAni, absProgress);\n  const opacity = parser.parseOpacity(curAni, nextAni, absProgress);\n\n  return new Animation({ x, y, rotate, scaleX, scaleY, marginLeft, marginTop, anchor, visibility, opacity });\n}\n\n// 스타일 객체를 React Component Style Object로 파싱합니다.\nexport function parseStyle(ani: Animation, load: boolean, opts: ParseStyleParma): React.CSSProperties {\n  const { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight } = opts;\n\n  const rateW = stageWidth / baseWidth;\n  const rateH = stageHeight / baseHeight;\n  const x = (ani.x * rateW).toFixed(2);\n  const y = (ani.y * rateH).toFixed(2);\n\n  const anchor = ani.anchor.slice(0, 2);\n  const visibility = load && ani.visibility ? 'visible' : 'hidden';\n  const opacity = (ani.opactiy / 100).toFixed(2);\n  const marginLeft = ((targetWidth * ani.marginLeft) / 100).toFixed(2);\n  const marginTop = ((targetHeight * ani.marginTop) / 100).toFixed(2);\n  const transform = [`translate(${x}px, ${y}px)`, `rotate(${ani.rotate}deg)`, `scale(${ani.scaleX}, ${ani.scaleY})`];\n\n  const style: React.CSSProperties = {\n    position: 'absolute',\n    visibility,\n    opacity,\n    transformOrigin: anchor.join(' '),\n    transform: transform.join(' '),\n    marginLeft: `${marginLeft}px`,\n    marginTop: `${marginTop}px`,\n  };\n\n  if (trans) {\n    style.transitionProperty = 'transform, margin, opacity';\n    style.transitionDuration = `${duration / 1000}s`;\n    style.transitionTimingFunction = 'cubic-bezier(0.2, 0.2, 0, 1)';\n  }\n\n  return style;\n}\n","import Animation from 'modules/animation/model';\n\n// 변화를 반영한 X 값을 반환합니다.\nexport function parseX(cur: Animation, next: Animation, progress: number) {\n  const moveX = ((next.x - cur.x) * progress) / 100;\n  return cur.x + moveX;\n}\n\n// 변화를 반영한 Y 값을 반환합니다.\nexport function parseY(cur: Animation, next: Animation, progress: number) {\n  const moveY = ((next.y - cur.y) * progress) / 100;\n  return cur.y + moveY;\n}\n\n// 변화를 반영한 Rotate 값을 반환합니다.\nexport function parseRotate(cur: Animation, next: Animation, progress: number) {\n  const rotate = ((next.rotate - cur.rotate) * progress) / 100;\n  return cur.rotate + rotate;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleX(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleX - cur.scaleX) * progress) / 100;\n  return cur.scaleX + scale;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleY(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleY - cur.scaleY) * progress) / 100;\n  return cur.scaleY + scale;\n}\n\n// 변화를 반영한 Anchor 값을 반환합니다.\nexport function parseAnchor(cur: Animation, next: Animation, progress: number) {\n  return progress >= 0 ? cur.anchor : next.anchor;\n}\n\n// 변화를 반영한 Margin LEft 값을 반환합니다.\nexport function parseMarginLeft(cur: Animation, next: Animation, progress: number) {\n  const marginLeft = ((next.marginLeft - cur.marginLeft) * progress) / 100;\n  return cur.marginLeft + marginLeft;\n}\n\n// 변화를 반영한 Margin Right 값을 반환합니다.\nexport function parseMarginTop(cur: Animation, next: Animation, progress: number) {\n  const marginTop = ((next.marginTop - cur.marginTop) * progress) / 100;\n  return cur.marginTop + marginTop;\n}\n\n// 변화를 반영한 Opacity 값을 반환합니다.\nexport function parseOpacity(cur: Animation, next: Animation, progress: number) {\n  const opactiy = ((next.opactiy - cur.opactiy) * progress) / 100;\n  return cur.opactiy + opactiy;\n}\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.title;\n\ninterface TitleProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction Title({ short, progress, stageWidth, stageHeight }: TitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('title', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      Aesop’s Fables\n    </span>\n  );\n}\n\nexport default Title;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.underLine;\n\ninterface UnderLineProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction UnderLine({ short, progress, stageWidth, stageHeight }: UnderLineProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const underLineClass = useMemo(() => cxScene('under-line'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return <div className={underLineClass} style={style} ref={target} />;\n}\n\nexport default UnderLine;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.subTitle;\n\ninterface SubTitleProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction SubTitle({ short, progress, stageWidth, stageHeight }: SubTitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('sub-title', 'font-title-ko'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      이솝 이야기: 늑대의 흉계\n    </span>\n  );\n}\n\nexport default SubTitle;\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\nimport classNames from 'classnames/bind';\nimport Lottie from 'react-lottie';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/lion.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.lion;\n\ninterface LionProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nconst lottieOption = {\n  loop: true,\n  autoplay: true,\n  animationData: svg,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nfunction Lion({ short, progress, stageWidth, stageHeight }: LionProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const [play, setPlay] = useState<boolean>(false);\n  const lionClass = useMemo(() => cxScene('lion'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  useEffect(() => {\n    setPlay(short < 4);\n  }, [short]);\n\n  return (\n    <div style={style} ref={target} className={lionClass}>\n      <Lottie options={lottieOption} isPaused={!play} />\n    </div>\n  );\n}\n\nexport default Lion;\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\nimport classNames from 'classnames/bind';\nimport Lottie from 'react-lottie';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/scroll.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.scroll;\n\ninterface ScrollProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nconst lottieOption = {\n  loop: true,\n  autoplay: true,\n  animationData: svg,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nfunction Scroll({ short, progress, stageWidth, stageHeight }: ScrollProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const [play, setPlay] = useState<boolean>(false);\n  const lionClass = useMemo(() => cxScene('scroll'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  useEffect(() => {\n    setPlay(short === 2);\n  }, [short]);\n\n  return (\n    <div style={style} ref={target} className={lionClass}>\n      <Lottie options={lottieOption} isPaused={!play} />\n    </div>\n  );\n}\n\nexport default Scroll;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.text;\n\ninterface TextProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction Text({ short, progress, stageWidth, stageHeight }: TextProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const textCalss = useMemo(() => cxScene('text', 'font-main-ko'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <p style={style} ref={target} className={textCalss}>\n      동물들의 왕 사자가 병이 들어 누워 있었습니다.\n    </p>\n  );\n}\n\nexport default Text;\n","import React, { useMemo, useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\nimport { callAfterRerender } from 'modules/helper';\n\nimport Title from 'components/sequence01/title';\nimport UnderLine from 'components/sequence01/under-line';\nimport SubTitle from 'components/sequence01/sub-title';\nimport Lion from 'components/sequence01/lion';\nimport Scroll from 'components/sequence01//scroll';\nimport Text from 'components/sequence01/text';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.container;\n\ninterface Sequence01rops {\n  scene: number;\n  progress: number;\n  appWidth: number;\n  appHeight: number;\n  registAction: (regist: boolean) => void;\n}\n\nfunction Sequence01({ scene, progress, appWidth, appHeight, registAction }: Sequence01rops) {\n  const [short, setShort] = useState(0); // 현재 Sequence Short 번호\n  const endScene = useMemo(() => data.shortDest.length + data.startScene, []); // 더이상 진행할 내용일 없는 Scene 번호\n\n  const container = useRef<HTMLDivElement>(null);\n  const stage = useRef<HTMLDivElement>(null);\n\n  const containerClass = useMemo(() => cxScene('container'), []);\n  const stageClass = useMemo(() => cxScene('stage'), []);\n\n  const { load, style, targetWidth, targetHeight } = UseSequnce({\n    short,\n    progress,\n    target: container.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth: appWidth,\n    stageHeight: appHeight,\n    data: info,\n  });\n\n  //  하위 컴포너트가 필요한 것은 Container의 사이즈가 아니라 Stage의 사이즈입니다.\n  const [stageWidth, stageHeight] = useMemo(() => {\n    if (!stage.current) return [0, 0];\n    return [stage.current.clientWidth, stage.current.clientHeight];\n  }, [stage.current, targetWidth, targetHeight]);\n\n  // Scene에 해당하는 목표 Short 번호에 맞게 다음 Short 번호를 설정합니다.\n  useEffect(() => {\n    if (load && scene < endScene && scene >= data.startScene) {\n      const current = scene - data.startScene;\n      const shortDest = data.shortDest[current];\n\n      if (short !== shortDest) {\n        // Short의 변경이 필요하다면 Action 실행을 등록합니다.\n        const shortNext = shortDest > short ? short + 1 : shortDest;\n        // useState로 short를 변경하게되면, Repaint가 수행되기 전에 short 번호가 변경되는 것 같습니다.\n        // 그로인해 short가 before load => 0 => 1이 아니라, before load => 1이 반영됩니다.\n        // requestAnimationFrame을 render 전에 다시 한번 요청하는 트릭을 사용해서 해결합니다.\n        callAfterRerender(() => setShort(shortNext));\n        registAction(true);\n      }\n    }\n  }, [load, scene]);\n\n  // Short가 변경되면 Transalte 동작 후 목표 Short 번호에 맞게 Actrion을 진행합니다.\n  useEffect(() => {\n    if (load) {\n      const shortDest = data.shortDest[scene - 1];\n      const isFinish = shortDest === short;\n      const nextShort = short + 1;\n\n      setTimeout(() => {\n        // Short가 목표치에 도달하면 Action을 종료합니다.\n        if (isFinish) registAction(false);\n        // Short가 목표치에 도달하지 목하면 다음 short로 이동합니다.\n        else setShort(nextShort);\n      }, data.duration);\n    }\n  }, [short]);\n\n  return (\n    <div className={containerClass} style={style} ref={container}>\n      <div className={stageClass} ref={stage}>\n        <Title short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <UnderLine short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <SubTitle short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <Lion short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <Scroll short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <Text short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n      </div>\n    </div>\n  );\n}\n\nexport default Sequence01;\n","// state 혹은 prop의 변경이 repaint 이전에 전부 수행될 시, 중간과정이 생햑됩니다.\n// requestAnimationFrame을 render 전에 다시 한번 요청하는 트릭을 사용해서 해결합니다.\nexport const callAfterRerender = (cb: () => void) => {\n  requestAnimationFrame(() => requestAnimationFrame(cb));\n};\n","import React, { useState, useCallback, useRef, useMemo, useEffect } from 'react';\n\nimport Sequence01 from 'components/sequence01';\nimport animation from 'static/animation/index.json';\nimport 'styles/main.scss';\n\nfunction App() {\n  const [width, setWidth] = useState(document.body.clientWidth); // Application Width\n  const [height, setHeight] = useState(document.body.clientHeight); // Application Height\n\n  const [scene, setScene] = useState(1); // 현재 Scene 번호\n  const [progress, setProgress] = useState(0); // 현재 Scene 진행률\n  const actionFlag = useRef(false); // 앤션 진행 플래그\n  const eventFalg = useRef(false); // 이벤트 디바운스를 플래그\n\n  const actionCnt = useRef<number>(0); // 현재 Action 수행중인 Sequence 갯수\n  const wheelStop = useRef<ReturnType<typeof setTimeout>>(); // 마우스 휠이 멈추면 발생하는 Timeout Event Handler\n  const isMaxScene = useMemo(() => scene === animation.totalScene, [scene]); // 현재 Scene이 마지막인지 여부\n  const isMinScene = useMemo(() => scene === 1, [scene]); // 현재 Scene이 처음인지 여부\n\n  // 다음 Scene을 진행합니다.\n  const moveNextScene = useCallback(() => {\n    if (!isMaxScene) setScene(scene + 1);\n    if (progress) setProgress(0);\n  }, [isMaxScene, scene, progress]);\n\n  // 이전 Scene을 진행합니다.\n  const movePrevScene = useCallback(() => {\n    if (!isMinScene) setScene(scene - 1);\n    if (progress) setProgress(0);\n  }, [isMinScene, scene, progress]);\n\n  // Sequence의 Action 실행/종료를 보고 받습니다.\n  const registAction = useCallback((regist: boolean) => {\n    if (regist) actionCnt.current += 1;\n    else if (actionCnt.current > 0) actionCnt.current -= 1;\n\n    if (actionCnt.current === 0) actionFlag.current = false;\n    else if (actionFlag.current === false) actionFlag.current = true;\n  }, []);\n\n  // 진행률의 변동을 반영합니다.\n  const renderProgress = useCallback(\n    (delta: number) => {\n      // 더이상 진행할 쇼트가 없으면 멈춥니다.\n      const next = progress + delta * animation.deletaSensitive;\n      if (next > 0 && isMaxScene) return;\n      if (next < 0 && isMinScene) return;\n\n      // 진행률이 일장 값 이상 도달하면 다음 Scene으로 이동합니다.\n      if (Math.abs(next) >= animation.actionStart) {\n        actionFlag.current = true;\n        if (next > 0) moveNextScene();\n        else movePrevScene();\n      } else {\n        setProgress(next);\n      }\n    },\n    [progress, isMaxScene, isMinScene],\n  );\n\n  // Wheel의 동작을 처리합니다.\n  const wheelCallback = useCallback(\n    (e: React.WheelEvent<HTMLDivElement>) => {\n      // Flag가 있거나, 수직 변동 값이 없으면 진행하지 않습니다.\n      if (eventFalg.current || actionFlag.current) return;\n\n      window.requestAnimationFrame(() => {\n        // 마우스 움직임을 Process에 반여하고, Event Flag는 제거합니다.\n        eventFalg.current = false;\n        renderProgress(e.deltaY);\n\n        // Action 상태가 아닌데 Wheel이 멈추면 Process를 초기화합니다.\n        if (wheelStop.current) clearTimeout(wheelStop.current);\n        wheelStop.current = setTimeout(() => {\n          if (!actionFlag.current) setProgress(0);\n        }, 100);\n      });\n\n      eventFalg.current = true;\n    },\n    [renderProgress],\n  );\n\n  // Window 사이즈가 조정되면 Sequence Container들을 resize합니다.\n  const resize = useCallback(() => {\n    setWidth(document.body.clientWidth);\n    setHeight(document.body.clientHeight);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, [resize]);\n\n  return (\n    <div className=\"App\" onWheel={wheelCallback}>\n      <Sequence01 scene={scene} progress={progress} appWidth={width} appHeight={height} registAction={registAction} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scene01_container__1T_E7\",\"stage\":\"scene01_stage__dsnc2\",\"title\":\"scene01_title__2i5-l\",\"under-line\":\"scene01_under-line__31CWl\",\"sub-title\":\"scene01_sub-title__1UVJV\",\"lion\":\"scene01_lion__2uMb5\",\"scroll\":\"scene01_scroll__TyvOM\",\"text\":\"scene01_text__3AM-k\"};"],"sourceRoot":""}