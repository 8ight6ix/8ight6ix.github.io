{"version":3,"sources":["reportWebVitals.ts","modules/animation/model.tsx","modules/hooks/use-sequence.ts","modules/animation/index.ts","modules/animation/parser.ts","components/sequence01/title.tsx","components/sequence01/under-line.tsx","components/sequence01/sub-title.tsx","components/sequence01/lion.tsx","components/sequence01/index.tsx","modules/helper.ts","App.tsx","index.tsx","styles/page/scene01.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Animation","row","defRow","_x","_y","_rotate","_scaleX","_scaleY","_marginLeft","_marginTop","_anchor","_visibility","this","x","y","rotate","scaleX","scaleY","marginLeft","marginTop","anchor","visibility","UseSequence","short","progress","target","duration","stageWidth","stageHeight","data","useState","load","setLoad","baseHeight","baseWidth","animationData","useMemo","clientWidth","clientHeight","targetWidth","targetHeight","animationList","rows","size","length","animations","Array","i","parseRowDatas","animation","anis","curAni","nextAni","absProgress","Math","abs","cur","next","moveX","parser","moveY","scale","parseAnimation","trans","style","ani","opts","rateW","rateH","toFixed","slice","transform","position","transformOrigin","join","transitionProperty","transitionDuration","transitionTimingFunction","parseStyle","useEffect","cxScene","classNames","bind","styleScene01","info","cuts","title","Title","useRef","titleClass","UseSequnce","current","ref","className","underLine","UnderLine","underLineClass","subTitle","SubTitle","lion","lottieOption","loop","autoplay","svg","rendererSettings","preserveAspectRatio","Lion","play","setPlay","lionClass","options","isPaused","container","Sequence01","scene","appWidth","appHeight","registAction","setShort","endScene","shortDest","startScene","stage","containerClass","stageClass","shortNext","cb","requestAnimationFrame","isFinish","nextShort","setTimeout","App","document","body","width","setWidth","height","setHeight","setScene","setProgress","actionFlag","eventFalg","actionCnt","wheelStop","isMaxScene","totalScene","isMinScene","moveNextScene","useCallback","movePrevScene","regist","renderProgress","delta","deletaSensitive","actionStart","wheelCallback","e","window","deltaY","clearTimeout","resize","addEventListener","removeEventListener","onWheel","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fcb63e9d.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface AnimtaionRowData {\n  x?: number;\n  y?: number;\n  rotate?: number;\n  scaleX?: number;\n  scaleY?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  anchor?: string[];\n  visibility?: boolean;\n}\n\nclass Animation {\n  private _x: number;\n\n  private _y: number;\n\n  private _rotate: number;\n\n  private _scaleX: number;\n\n  private _scaleY: number;\n\n  private _marginLeft: number;\n\n  private _marginTop: number;\n\n  private _anchor: string[];\n\n  private _visibility: boolean;\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get rotate() {\n    return this._rotate;\n  }\n\n  get scaleX() {\n    return this._scaleX;\n  }\n\n  get scaleY() {\n    return this._scaleY;\n  }\n\n  get marginLeft() {\n    return this._marginLeft;\n  }\n\n  get marginTop() {\n    return this._marginTop;\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  constructor(row: AnimtaionRowData, defRow?: Animation) {\n    this._x = row.x ?? defRow?.x ?? 0;\n    this._y = row.y ?? defRow?.y ?? 0;\n    this._rotate = row.rotate ?? defRow?.rotate ?? 0;\n    this._scaleX = row.scaleX ?? defRow?.scaleX ?? 1;\n    this._scaleY = row.scaleY ?? defRow?.scaleY ?? 1;\n    this._marginLeft = row.marginLeft ?? defRow?._marginLeft ?? 0;\n    this._marginTop = row.marginTop ?? defRow?._marginTop ?? 0;\n    this._anchor = row.anchor ?? defRow?.anchor ?? ['center'];\n    this._visibility = row.visibility ?? defRow?.visibility ?? true;\n  }\n}\n\nexport default Animation;\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { AnimtaionRowData } from 'modules/animation/model';\nimport { parseRowDatas, parseAnimation, parseStyle } from 'modules/animation';\n\ninterface UseSequenceData {\n  baseWidth: number;\n  baseHeight: number;\n  animationData: AnimtaionRowData[];\n}\n\ninterface UseSequenceProps {\n  short: number;\n  progress: number;\n  target: HTMLElement | null;\n  duration: number;\n  stageWidth: number;\n  stageHeight: number;\n  data: UseSequenceData;\n}\n\nfunction UseSequence({ short, progress, target, duration, stageWidth, stageHeight, data }: UseSequenceProps) {\n  const [load, setLoad] = useState(false);\n  const { baseHeight, baseWidth, animationData } = data;\n\n  // Traget의 사이즈를 수집합니다.\n  const [targetWidth, targetHeight] = useMemo(() => {\n    if (!target) return [0, 0];\n    return [target.clientWidth, target.clientHeight];\n  }, [target, stageWidth, stageHeight]);\n\n  /* ********************************** */\n  /* Create Animation CSS Style Object  */\n  /* ********************************** */\n\n  const animationList = useMemo(() => parseRowDatas(animationData), []); // json 데이터를 파싱합니다.\n  const animation = useMemo(() => parseAnimation(short, progress, animationList), [short, progress]); // progress 수치를 대입한 Animation 객체를 생성합니다.\n  const trans = useMemo(() => load && short > 0, [load, short]); // load가 끝나기 전과 첫 short에서는 Transition으 적용하지 않습니다.\n\n  const style = useMemo(() => {\n    const opts = { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight };\n    return parseStyle(animation, load, opts);\n  }, [trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight, animation, load]);\n\n  /* ****************** */\n  /* After Load Action  */\n  /* ****************** */\n\n  // Component가 Load되면 사이즈 재 측정 등의 로직을 수행해야 합니다.\n  useEffect(() => {\n    setLoad(true);\n  }, []);\n\n  return { load, style, targetWidth, targetHeight };\n}\n\nexport default UseSequence;\n","import React from 'react';\nimport Animation, { AnimtaionRowData } from 'modules/animation/model';\nimport * as parser from 'modules/animation/parser';\n\ninterface ParseStyleParma {\n  trans: boolean;\n  duration: number;\n  baseWidth: number;\n  baseHeight: number;\n  stageWidth: number;\n  stageHeight: number;\n  targetWidth: number;\n  targetHeight: number;\n}\n\n// Row Data 리스트를 Information 리스트로 파싱합니다.\nexport function parseRowDatas(rows: AnimtaionRowData[]) {\n  const size = rows.length;\n  const animations = Array<Animation>(size);\n\n  if (size > 0) {\n    // 존재하지 않는 Animation Row Data는 이전 Data의 것을 그대로 사용합니다.\n    animations[0] = new Animation(rows[0]);\n    for (let i = 1; i < size; i += 1) {\n      animations[i] = new Animation(rows[i], animations[i - 1]);\n    }\n  }\n\n  return animations;\n}\n\n// 이전 스타일 객체에서 Short가 진행된 만큼 변화가 반영된 Style 객체를 반환합니다.\nexport function parseAnimation(short: number, progress: number, anis: Animation[]) {\n  if (short <= 0 && progress <= 0) return anis[0]; // 더이상 뒤로갈 에니메이션이 없는 경우\n  if (short >= anis.length - 1 && progress >= 0) return anis[anis.length - 1]; // 더이상 앞으로갈 에니메이션이 없는 경우\n  if (progress === 0) return anis[short]; // progress가 0인 경우\n\n  const curAni = anis[short];\n  const nextAni = progress >= 0 ? anis[short + 1] : anis[short - 1];\n  const absProgress = Math.abs(progress);\n\n  const { visibility } = nextAni;\n  const x = parser.parseX(curAni, nextAni, absProgress);\n  const y = parser.parseY(curAni, nextAni, absProgress);\n  const rotate = parser.parseRotate(curAni, nextAni, absProgress);\n  const scaleX = parser.parseScaleX(curAni, nextAni, absProgress);\n  const scaleY = parser.parseScaleY(curAni, nextAni, absProgress);\n  const marginLeft = parser.parseMarginLeft(curAni, nextAni, absProgress);\n  const marginTop = parser.parseMarginTop(curAni, nextAni, absProgress);\n  const anchor = parser.parseAnchor(curAni, nextAni, absProgress);\n\n  return new Animation({ x, y, rotate, scaleX, scaleY, marginLeft, marginTop, anchor, visibility });\n}\n\n// 스타일 객체를 React Component Style Object로 파싱합니다.\nexport function parseStyle(ani: Animation, load: boolean, opts: ParseStyleParma): React.CSSProperties {\n  const { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight } = opts;\n\n  const rateW = stageWidth / baseWidth;\n  const rateH = stageHeight / baseHeight;\n  const x = (ani.x * rateW).toFixed(2);\n  const y = (ani.y * rateH).toFixed(2);\n\n  const anchor = ani.anchor.slice(0, 2);\n  const visibility = load && ani.visibility ? 'visible' : 'hidden';\n  const marginLeft = ((targetWidth * ani.marginLeft) / 100).toFixed(2);\n  const marginTop = ((targetHeight * ani.marginTop) / 100).toFixed(2);\n  const transform = [`translate(${x}px, ${y}px)`, `rotate(${ani.rotate}deg)`, `scale(${ani.scaleX}, ${ani.scaleY})`];\n\n  const style: React.CSSProperties = {\n    position: 'absolute',\n    visibility,\n    transformOrigin: anchor.join(' '),\n    transform: transform.join(' '),\n    marginLeft: `${marginLeft}px`,\n    marginTop: `${marginTop}px`,\n  };\n\n  if (trans) {\n    style.transitionProperty = 'transform, margin';\n    style.transitionDuration = `${duration / 1000}s`;\n    style.transitionTimingFunction = 'cubic-bezier(0.2, 0.2, 0, 1)';\n  }\n\n  return style;\n}\n","import Animation from 'modules/animation/model';\n\n// 변화를 반영한 X 값을 반환합니다.\nexport function parseX(cur: Animation, next: Animation, progress: number) {\n  const moveX = ((next.x - cur.x) * progress) / 100;\n  return cur.x + moveX;\n}\n\n// 변화를 반영한 Y 값을 반환합니다.\nexport function parseY(cur: Animation, next: Animation, progress: number) {\n  const moveY = ((next.y - cur.y) * progress) / 100;\n  return cur.y + moveY;\n}\n\n// 변화를 반영한 Rotate 값을 반환합니다.\nexport function parseRotate(cur: Animation, next: Animation, progress: number) {\n  const rotate = ((next.rotate - cur.rotate) * progress) / 100;\n  return cur.rotate + rotate;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleX(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleX - cur.scaleX) * progress) / 100;\n  return cur.scaleX + scale;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleY(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleY - cur.scaleY) * progress) / 100;\n  return cur.scaleY + scale;\n}\n\n// 변화를 반영한 Anchor 값을 반환합니다.\nexport function parseAnchor(cur: Animation, next: Animation, progress: number) {\n  return progress >= 0 ? cur.anchor : next.anchor;\n}\n\nexport function parseMarginLeft(cur: Animation, next: Animation, progress: number) {\n  const marginLeft = ((next.marginLeft - cur.marginLeft) * progress) / 100;\n  return cur.marginLeft + marginLeft;\n}\n\nexport function parseMarginTop(cur: Animation, next: Animation, progress: number) {\n  const marginTop = ((next.marginTop - cur.marginTop) * progress) / 100;\n  return cur.marginTop + marginTop;\n}\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.title;\n\ninterface TitleProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction Title({ short, progress, stageWidth, stageHeight }: TitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('title', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      Aesop’s Fables\n    </span>\n  );\n}\n\nexport default Title;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.underLine;\n\ninterface UnderLineProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction UnderLine({ short, progress, stageWidth, stageHeight }: UnderLineProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const underLineClass = useMemo(() => cxScene('under-line', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return <div className={underLineClass} style={style} ref={target} />;\n}\n\nexport default UnderLine;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.subTitle;\n\ninterface SubTitleProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction SubTitle({ short, progress, stageWidth, stageHeight }: SubTitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('sub-title', 'font-title-ko'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      이솝 이야기: 늑대의 흉계\n    </span>\n  );\n}\n\nexport default SubTitle;\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\nimport classNames from 'classnames/bind';\nimport Lottie from 'react-lottie';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/lion.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.lion;\n\ninterface LionProps {\n  short: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nconst lottieOption = {\n  loop: true,\n  autoplay: true,\n  animationData: svg,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nfunction Lion({ short, progress, stageWidth, stageHeight }: LionProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const [play, setPlay] = useState<boolean>(false);\n  const lionClass = useMemo(() => cxScene('lion', 'font-title-en'), []);\n\n  const { style } = UseSequnce({\n    short,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  useEffect(() => {\n    setPlay(short < 3);\n  }, [short]);\n\n  return (\n    <div style={style} ref={target} className={lionClass}>\n      <Lottie options={lottieOption} isPaused={!play} />\n    </div>\n  );\n}\n\nexport default Lion;\n","import React, { useMemo, useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseSequnce from 'modules/hooks/use-sequence';\nimport { callAfterRerender } from 'modules/helper';\n\nimport Title from 'components/sequence01/title';\nimport UnderLine from 'components/sequence01/under-line';\nimport SubTitle from 'components/sequence01/sub-title';\nimport Lion from 'components/sequence01/lion';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.container;\n\ninterface Sequence01rops {\n  scene: number;\n  progress: number;\n  appWidth: number;\n  appHeight: number;\n  registAction: (regist: boolean) => void;\n}\n\nfunction Sequence01({ scene, progress, appWidth, appHeight, registAction }: Sequence01rops) {\n  const [short, setShort] = useState(0); // 현재 Sequence Short 번호\n  const endScene = useMemo(() => data.shortDest.length + data.startScene, []); // 더이상 진행할 내용일 없는 Scene 번호\n\n  const container = useRef<HTMLDivElement>(null);\n  const stage = useRef<HTMLDivElement>(null);\n\n  const containerClass = useMemo(() => cxScene('container'), []);\n  const stageClass = useMemo(() => cxScene('stage'), []);\n\n  const { load, style, targetWidth, targetHeight } = UseSequnce({\n    short,\n    progress,\n    target: container.current,\n    duration: data.duration,\n    stageWidth: appWidth,\n    stageHeight: appHeight,\n    data: info,\n  });\n\n  //  하위 컴포너트가 필요한 것은 Container의 사이즈가 아니라 Stage의 사이즈입니다.\n  const [stageWidth, stageHeight] = useMemo(() => {\n    if (!stage.current) return [0, 0];\n    return [stage.current.clientWidth, stage.current.clientHeight];\n  }, [stage.current, targetWidth, targetHeight]);\n\n  // Scene에 해당하는 목표 Short 번호에 맞게 다음 Short 번호를 설정합니다.\n  useEffect(() => {\n    if (load && scene < endScene && scene >= data.startScene) {\n      const current = scene - data.startScene;\n      const shortDest = data.shortDest[current];\n\n      if (short !== shortDest) {\n        // Short의 변경이 필요하다면 Action 실행을 등록합니다.\n        const shortNext = shortDest > short ? short + 1 : shortDest;\n        // useState로 short를 변경하게되면, Repaint가 수행되기 전에 short 번호가 변경되는 것 같습니다.\n        // 그로인해 short가 before load => 0 => 1이 아니라, before load => 1이 반영됩니다.\n        // requestAnimationFrame을 render 전에 다시 한번 요청하는 트릭을 사용해서 해결합니다.\n        callAfterRerender(() => setShort(shortNext));\n        registAction(true);\n      }\n    }\n  }, [load, scene]);\n\n  // Short가 변경되면 Transalte 동작 후 목표 Short 번호에 맞게 Actrion을 진행합니다.\n  useEffect(() => {\n    if (load) {\n      const shortDest = data.shortDest[scene - 1];\n      const isFinish = shortDest === short;\n      const nextShort = short + 1;\n\n      setTimeout(() => {\n        // Short가 목표치에 도달하면 Action을 종료합니다.\n        if (isFinish) registAction(false);\n        // Short가 목표치에 도달하지 목하면 다음 short로 이동합니다.\n        else setShort(nextShort);\n      }, data.duration);\n    }\n  }, [short]);\n\n  return (\n    <div className={containerClass} style={style} ref={container}>\n      <div className={stageClass} ref={stage}>\n        <Title short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <UnderLine short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <SubTitle short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n        <Lion short={short} progress={progress} stageWidth={stageWidth} stageHeight={stageHeight} />\n      </div>\n    </div>\n  );\n}\n\nexport default Sequence01;\n","// state 혹은 prop의 변경이 repaint 이전에 전부 수행될 시, 중간과정이 생햑됩니다.\n// requestAnimationFrame을 render 전에 다시 한번 요청하는 트릭을 사용해서 해결합니다.\nexport const callAfterRerender = (cb: () => void) => {\n  requestAnimationFrame(() => requestAnimationFrame(cb));\n};\n","import React, { useState, useCallback, useRef, useMemo, useEffect } from 'react';\n\nimport Sequence01 from 'components/sequence01';\nimport animation from 'static/animation/index.json';\nimport 'styles/main.scss';\n\nfunction App() {\n  const [width, setWidth] = useState(document.body.clientWidth); // Application Width\n  const [height, setHeight] = useState(document.body.clientHeight); // Application Height\n\n  const [scene, setScene] = useState(1); // 현재 Scene 번호\n  const [progress, setProgress] = useState(0); // 현재 Scene 진행률\n  const actionFlag = useRef(false); // 앤션 진행 플래그\n  const eventFalg = useRef(false); // 이벤트 디바운스를 플래그\n\n  const actionCnt = useRef<number>(0); // 현재 Action 수행중인 Sequence 갯수\n  const wheelStop = useRef<ReturnType<typeof setTimeout>>(); // 마우스 휠이 멈추면 발생하는 Timeout Event Handler\n  const isMaxScene = useMemo(() => scene === animation.totalScene, [scene]); // 현재 Scene이 마지막인지 여부\n  const isMinScene = useMemo(() => scene === 1, [scene]); // 현재 Scene이 처음인지 여부\n\n  // 다음 Scene을 진행합니다.\n  const moveNextScene = useCallback(() => {\n    if (!isMaxScene) setScene(scene + 1);\n    if (progress) setProgress(0);\n  }, [isMaxScene, scene, progress]);\n\n  // 이전 Scene을 진행합니다.\n  const movePrevScene = useCallback(() => {\n    if (!isMinScene) setScene(scene - 1);\n    if (progress) setProgress(0);\n  }, [isMinScene, scene, progress]);\n\n  // Sequence의 Action 실행/종료를 보고 받습니다.\n  const registAction = useCallback((regist: boolean) => {\n    if (regist) actionCnt.current += 1;\n    else if (actionCnt.current > 0) actionCnt.current -= 1;\n\n    if (actionCnt.current === 0) actionFlag.current = false;\n    else if (actionFlag.current === false) actionFlag.current = true;\n  }, []);\n\n  // 진행률의 변동을 반영합니다.\n  const renderProgress = useCallback(\n    (delta: number) => {\n      // 더이상 진행할 쇼트가 없으면 멈춥니다.\n      const next = progress + delta * animation.deletaSensitive;\n      if (next > 0 && isMaxScene) return;\n      if (next < 0 && isMinScene) return;\n\n      // 진행률이 일장 값 이상 도달하면 다음 Scene으로 이동합니다.\n      if (Math.abs(next) >= animation.actionStart) {\n        actionFlag.current = true;\n        if (next > 0) moveNextScene();\n        else movePrevScene();\n      } else {\n        setProgress(next);\n      }\n    },\n    [progress, isMaxScene, isMinScene],\n  );\n\n  // Wheel의 동작을 처리합니다.\n  const wheelCallback = useCallback(\n    (e: React.WheelEvent<HTMLDivElement>) => {\n      // Flag가 있거나, 수직 변동 값이 없으면 진행하지 않습니다.\n      if (eventFalg.current || actionFlag.current) return;\n\n      window.requestAnimationFrame(() => {\n        // 마우스 움직임을 Process에 반여하고, Event Flag는 제거합니다.\n        eventFalg.current = false;\n        renderProgress(e.deltaY);\n\n        // Action 상태가 아닌데 Wheel이 멈추면 Process를 초기화합니다.\n        if (wheelStop.current) clearTimeout(wheelStop.current);\n        wheelStop.current = setTimeout(() => {\n          if (!actionFlag.current) setProgress(0);\n        }, 100);\n      });\n\n      eventFalg.current = true;\n    },\n    [renderProgress],\n  );\n\n  // Window 사이즈가 조정되면 Sequence Container들을 resize합니다.\n  const resize = useCallback(() => {\n    setWidth(document.body.clientWidth);\n    setHeight(document.body.clientHeight);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, [resize]);\n\n  return (\n    <div className=\"App\" onWheel={wheelCallback}>\n      <Sequence01 scene={scene} progress={progress} appWidth={width} appHeight={height} registAction={registAction} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scene01_container__1T_E7\",\"stage\":\"scene01_stage__dsnc2\",\"title\":\"scene01_title__2i5-l\",\"under-line\":\"scene01_under-line__31CWl\",\"sub-title\":\"scene01_sub-title__1UVJV\",\"lion\":\"scene01_lion__2uMb5\"};"],"sourceRoot":""}