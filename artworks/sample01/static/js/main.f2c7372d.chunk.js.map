{"version":3,"sources":["reportWebVitals.ts","modules/hooks/use-scroll-event.ts","modules/animation/model.tsx","modules/hooks/use-short.ts","modules/animation/index.ts","modules/animation/parser.ts","modules/hooks/use-sequence.ts","modules/helper.ts","static/svg/title.svg","components/sequence01/title.tsx","components/sequence01/under-line.tsx","components/sequence01/sub-title.tsx","components/sequence01/lion.tsx","components/sequence01/scroll.tsx","components/sequence01/text.tsx","components/sequence01/index.tsx","App.tsx","index.tsx","styles/page/scene01.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UseScrollEvent","wheelSensitive","useState","dist","setDist","touchY","setTouchY","eventFlag","useRef","freezeFlag","eventStopOut","initDist","useCallback","setFreeze","freeze","current","eventHandler","delta","window","requestAnimationFrame","clearTimeout","setTimeout","wheelCallback","e","deltaY","touchStartCallback","touches","length","clientY","touchMoveCallback","touchEndCallback","Animation","row","defRow","_x","_y","_rotate","_scaleX","_scaleY","_marginLeft","_marginTop","_anchor","_visibility","_opacity","this","x","y","rotate","scaleX","scaleY","marginLeft","marginTop","anchor","visibility","opacity","opactiy","useShort","short","nextShort","progress","target","duration","shortEnd","stageWidth","stageHeight","data","load","setLoad","baseHeight","baseWidth","animationData","useMemo","clientWidth","clientHeight","targetWidth","targetHeight","animationList","rows","animations","Array","lastAnimation","reduce","prev","cur","i","undefined","parseRowDatas","trans","animation","anis","curAni","nextAni","absProgress","Math","abs","next","moveX","parser","moveY","scale","parseAnimation","style","ani","opts","rateW","rateH","toFixed","slice","transform","position","transformOrigin","join","transitionProperty","transitionDuration","transitionTimingFunction","parseStyle","useEffect","UseSequence","scene","registAction","startScene","shortDest","init","setInit","setShort","lastScene","isActive","relativeScene","min","max","dest","cb","isFinish","cxScene","classNames","bind","styleScene01","info","cuts","title","Title","titleClass","UseShort","ref","className","src","svg","alt","underLine","UnderLine","underLineClass","subTitle","SubTitle","lion","lottieOption","loop","autoplay","rendererSettings","preserveAspectRatio","Lion","play","setPlay","lionClass","options","isPaused","scroll","Scroll","text","Text","textCalss","container","Sequence01","appWidth","appHeight","stage","containerClass","stageClass","App","setScene","document","body","width","setWidth","height","setHeight","actionCnt","isMaxScene","totalScene","isMinScene","useScrollEvent","deletaSensitive","moveNextScene","movePrevScene","regist","actionStart","resizeCallback","addEventListener","removeEventListener","onWheel","onTouchStart","onTouchMove","onTouchEnd","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f2c7372d.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useRef, useCallback } from 'react';\n\ninterface UseScrollEventProps {\n  wheelSensitive: number;\n}\n\nfunction UseScrollEvent({ wheelSensitive }: UseScrollEventProps) {\n  const [dist, setDist] = useState<number>(0); // Scroll Distance\n  const [touchY, setTouchY] = useState<number | null>(null); // Touch Start Point\n\n  const eventFlag = useRef(false); // 이벤트 디바운스를 플래그\n  const freezeFlag = useRef(false); // 동작 멈춤 플래그\n  const eventStopOut = useRef<ReturnType<typeof setTimeout>>(); // 스크롤 이벤트가 멈추면 발생하는 Timeout Event Handler\n\n  // Dist 값을 0으로 초기화합니다.\n  const initDist = useCallback(() => {\n    if (touchY) setTouchY(touchY + dist);\n    setDist(0);\n  }, [touchY, dist]);\n\n  // Hook 외부에서 동작 멈춤 제어\n  const setFreeze = useCallback((freeze: boolean) => {\n    if (freeze !== freezeFlag.current) freezeFlag.current = freeze;\n  }, []);\n\n  // 스크롤 이벤트 동작을 처리합니다.\n  const eventHandler = useCallback(\n    (delta: number) => {\n      // 선언된 Flag가 있으면 동작하지 않습니다.\n      if (eventFlag.current || freezeFlag.current) return;\n      eventFlag.current = true;\n\n      window.requestAnimationFrame(() => {\n        // 스크롤 움직임을 Dist에 반영하고, Event Flag는 제거합니다.\n        eventFlag.current = false;\n        setDist(delta);\n\n        // Freeze 상태가 아닌데 Scroll Event가 멈추면 Dist를 초기화합니다.\n        if (eventStopOut.current) clearTimeout(eventStopOut.current);\n        eventStopOut.current = setTimeout(() => {\n          if (!freezeFlag.current) initDist();\n        }, 100);\n      });\n    },\n    [initDist],\n  );\n\n  // Wheel Event의 동작을 처리합니다.\n  const wheelCallback = useCallback(\n    (e: React.WheelEvent<HTMLDivElement>) => {\n      eventHandler(e.deltaY * wheelSensitive + dist);\n    },\n    [dist, wheelSensitive],\n  );\n\n  // Touch Start Event의 동작을 처리합니다.\n  const touchStartCallback = useCallback((e: React.TouchEvent<HTMLDivElement>) => {\n    if (e.touches.length > 1) return; // 한손가락 터치만 허용합니다.\n    setTouchY(e.touches[0].clientY);\n  }, []);\n\n  // Touch Move Event의 동작을 처리힙니다.\n  const touchMoveCallback = useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      if (typeof touchY === 'number') {\n        eventHandler((touchY - e.touches[0].clientY) * wheelSensitive);\n      }\n    },\n    [touchY],\n  );\n\n  // Touch End Event의 동작을 처리합니다.\n  const touchEndCallback = useCallback(() => setTouchY(0), []);\n\n  return {\n    dist,\n    initDist,\n    setFreeze,\n    wheelCallback,\n    touchStartCallback,\n    touchMoveCallback,\n    touchEndCallback,\n  };\n}\n\nexport default UseScrollEvent;\n","export interface AnimtaionRowData {\n  x?: number;\n  y?: number;\n  rotate?: number;\n  scaleX?: number;\n  scaleY?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  anchor?: string[];\n  visibility?: boolean;\n  opacity?: number;\n}\n\nclass Animation {\n  private _x: number;\n\n  private _y: number;\n\n  private _rotate: number;\n\n  private _scaleX: number;\n\n  private _scaleY: number;\n\n  private _marginLeft: number;\n\n  private _marginTop: number;\n\n  private _anchor: string[];\n\n  private _visibility: boolean;\n\n  private _opacity: number;\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get rotate() {\n    return this._rotate;\n  }\n\n  get scaleX() {\n    return this._scaleX;\n  }\n\n  get scaleY() {\n    return this._scaleY;\n  }\n\n  get marginLeft() {\n    return this._marginLeft;\n  }\n\n  get marginTop() {\n    return this._marginTop;\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  get opactiy() {\n    return this._opacity;\n  }\n\n  constructor(row: AnimtaionRowData, defRow?: Animation) {\n    this._x = row.x ?? defRow?.x ?? 0;\n    this._y = row.y ?? defRow?.y ?? 0;\n    this._rotate = row.rotate ?? defRow?.rotate ?? 0;\n    this._scaleX = row.scaleX ?? defRow?.scaleX ?? 1;\n    this._scaleY = row.scaleY ?? defRow?.scaleY ?? 1;\n    this._marginLeft = row.marginLeft ?? defRow?._marginLeft ?? 0;\n    this._marginTop = row.marginTop ?? defRow?._marginTop ?? 0;\n    this._anchor = row.anchor ?? defRow?.anchor ?? ['center'];\n    this._visibility = row.visibility ?? defRow?.visibility ?? true;\n    this._opacity = row.opacity ?? defRow?.opactiy ?? 100;\n  }\n}\n\nexport default Animation;\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { AnimtaionRowData } from 'modules/animation/model';\nimport { parseRowDatas, parseAnimation, parseStyle } from 'modules/animation';\n\ninterface UuseShortData {\n  baseWidth: number;\n  baseHeight: number;\n  animationData: AnimtaionRowData[];\n}\n\ninterface useShorteProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  target: HTMLElement | null;\n  duration: number;\n  shortEnd: number;\n  stageWidth: number;\n  stageHeight: number;\n  data: UuseShortData;\n}\n\nfunction useShort({\n  short,\n  nextShort,\n  progress,\n  target,\n  duration,\n  shortEnd,\n  stageWidth,\n  stageHeight,\n  data,\n}: useShorteProps) {\n  const [load, setLoad] = useState(false);\n  const { baseHeight, baseWidth, animationData } = data;\n\n  // Traget의 사이즈를 수집합니다.\n  const [targetWidth, targetHeight] = useMemo(() => {\n    if (!target) return [0, 0];\n    return [target.clientWidth, target.clientHeight];\n  }, [target, stageWidth, stageHeight]);\n\n  /* ********************************** */\n  /* Create Animation CSS Style Object  */\n  /* ********************************** */\n\n  const animationList = useMemo(() => parseRowDatas(animationData, shortEnd), [animationData, shortEnd]); // json 데이터를 파싱합니다.\n  const trans = useMemo(() => load && short > 0, [load, short]); // load가 끝나기 전과 첫 short에서는 Transition으 적용하지 않습니다.\n  // progress 수치를 대입한 Animation 객체를 생성합니다.\n  const animation = useMemo(() => {\n    return parseAnimation(short, nextShort, progress, animationList);\n  }, [short, nextShort, progress, animationList]);\n\n  const style = useMemo(() => {\n    const opts = { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight };\n    return parseStyle(animation, load, opts);\n  }, [trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight, animation, load]);\n\n  /* ****************** */\n  /* After Load Action  */\n  /* ****************** */\n\n  // Component가 Load되면 사이즈 재 측정 등의 로직을 수행해야 합니다.\n  useEffect(() => {\n    setLoad(true);\n  }, []);\n\n  return { load, style, targetWidth, targetHeight };\n}\n\nexport default useShort;\n","import React from 'react';\nimport Animation, { AnimtaionRowData } from 'modules/animation/model';\nimport * as parser from 'modules/animation/parser';\n\ninterface ParseStyleParma {\n  trans: boolean;\n  duration: number;\n  baseWidth: number;\n  baseHeight: number;\n  stageWidth: number;\n  stageHeight: number;\n  targetWidth: number;\n  targetHeight: number;\n}\n\n// Row Data 리스트를 Information 리스트로 파싱합니다.\nexport function parseRowDatas(rows: AnimtaionRowData[], shortEnd: number) {\n  const animations = Array<Animation>(shortEnd + 1);\n  const lastAnimation = rows.reduce((prev: Animation | undefined, cur, i) => {\n    animations[i] = new Animation(cur, prev);\n    return animations[i];\n  }, undefined);\n\n  for (let i = rows.length; i <= shortEnd; i += 1) {\n    animations[i] = new Animation({}, lastAnimation);\n  }\n\n  return animations;\n}\n\n// 스타일 객체에서 Short가 진행된 만큼 변화가 반영된 Style 객체를 반환합니다.\nexport function parseAnimation(short: number, nextShort: number, progress: number, anis: Animation[]) {\n  if (short === nextShort) return anis[short];\n\n  const curAni = anis[short];\n  const nextAni = anis[nextShort];\n  const absProgress = Math.abs(progress);\n\n  const { visibility } = nextAni;\n  const x = parser.parseX(curAni, nextAni, absProgress);\n  const y = parser.parseY(curAni, nextAni, absProgress);\n  const rotate = parser.parseRotate(curAni, nextAni, absProgress);\n  const scaleX = parser.parseScaleX(curAni, nextAni, absProgress);\n  const scaleY = parser.parseScaleY(curAni, nextAni, absProgress);\n  const marginLeft = parser.parseMarginLeft(curAni, nextAni, absProgress);\n  const marginTop = parser.parseMarginTop(curAni, nextAni, absProgress);\n  const anchor = parser.parseAnchor(curAni, nextAni, absProgress);\n  const opacity = parser.parseOpacity(curAni, nextAni, absProgress);\n\n  return new Animation({ x, y, rotate, scaleX, scaleY, marginLeft, marginTop, anchor, visibility, opacity });\n}\n\n// 스타일 객체를 React Component Style Object로 파싱합니다.\nexport function parseStyle(ani: Animation, load: boolean, opts: ParseStyleParma): React.CSSProperties {\n  const { trans, duration, baseWidth, baseHeight, stageWidth, stageHeight, targetWidth, targetHeight } = opts;\n\n  const rateW = stageWidth / baseWidth;\n  const rateH = stageHeight / baseHeight;\n  const x = (ani.x * rateW).toFixed(2);\n  const y = (ani.y * rateH).toFixed(2);\n\n  const anchor = ani.anchor.slice(0, 2);\n  const visibility = load && ani.visibility ? 'visible' : 'hidden';\n  const opacity = (ani.opactiy / 100).toFixed(2);\n  const marginLeft = ((targetWidth * ani.marginLeft) / 100).toFixed(2);\n  const marginTop = ((targetHeight * ani.marginTop) / 100).toFixed(2);\n  const transform = [`translate(${x}px, ${y}px)`, `rotate(${ani.rotate}deg)`, `scale(${ani.scaleX}, ${ani.scaleY})`];\n\n  const style: React.CSSProperties = {\n    position: 'absolute',\n    visibility,\n    opacity,\n    transformOrigin: anchor.join(' '),\n    transform: transform.join(' '),\n    marginLeft: `${marginLeft}px`,\n    marginTop: `${marginTop}px`,\n  };\n\n  if (trans) {\n    style.transitionProperty = 'transform, margin, opacity';\n    style.transitionDuration = `${duration / 1000}s`;\n    style.transitionTimingFunction = 'cubic-bezier(0.2, 0.2, 0, 1)';\n  }\n\n  return style;\n}\n","import Animation from 'modules/animation/model';\n\n// 변화를 반영한 X 값을 반환합니다.\nexport function parseX(cur: Animation, next: Animation, progress: number) {\n  const moveX = ((next.x - cur.x) * progress) / 100;\n  return cur.x + moveX;\n}\n\n// 변화를 반영한 Y 값을 반환합니다.\nexport function parseY(cur: Animation, next: Animation, progress: number) {\n  const moveY = ((next.y - cur.y) * progress) / 100;\n  return cur.y + moveY;\n}\n\n// 변화를 반영한 Rotate 값을 반환합니다.\nexport function parseRotate(cur: Animation, next: Animation, progress: number) {\n  const rotate = ((next.rotate - cur.rotate) * progress) / 100;\n  return cur.rotate + rotate;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleX(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleX - cur.scaleX) * progress) / 100;\n  return cur.scaleX + scale;\n}\n\n// 변화를 반영한 Scale 값을 반환합니다.\nexport function parseScaleY(cur: Animation, next: Animation, progress: number) {\n  const scale = ((next.scaleY - cur.scaleY) * progress) / 100;\n  return cur.scaleY + scale;\n}\n\n// 변화를 반영한 Anchor 값을 반환합니다.\nexport function parseAnchor(cur: Animation, next: Animation, progress: number) {\n  return progress >= 0 ? cur.anchor : next.anchor;\n}\n\n// 변화를 반영한 Margin LEft 값을 반환합니다.\nexport function parseMarginLeft(cur: Animation, next: Animation, progress: number) {\n  const marginLeft = ((next.marginLeft - cur.marginLeft) * progress) / 100;\n  return cur.marginLeft + marginLeft;\n}\n\n// 변화를 반영한 Margin Right 값을 반환합니다.\nexport function parseMarginTop(cur: Animation, next: Animation, progress: number) {\n  const marginTop = ((next.marginTop - cur.marginTop) * progress) / 100;\n  return cur.marginTop + marginTop;\n}\n\n// 변화를 반영한 Opacity 값을 반환합니다.\nexport function parseOpacity(cur: Animation, next: Animation, progress: number) {\n  const opactiy = ((next.opactiy - cur.opactiy) * progress) / 100;\n  return cur.opactiy + opactiy;\n}\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { callAfterRerender } from 'modules/helper';\n\ninterface UseSequenceData {\n  duration: number;\n  startScene: number;\n  shortDest: number[];\n}\n\ninterface UseSequenceProps {\n  scene: number;\n  progress: number;\n  data: UseSequenceData;\n  registAction: (regist: boolean) => void;\n}\n\nfunction UseSequence({ scene, progress, data, registAction }: UseSequenceProps) {\n  const { duration, startScene, shortDest } = data;\n\n  const [init, setInit] = useState(false); // UseEffect 컨트롤을 위한 초기화 여부\n  const [short, setShort] = useState(0); // 현재 Sequence Short 번호\n  const lastScene = useMemo(() => shortDest.length + startScene - 1, [shortDest, startScene]); // 더이상 진행할 내용일 없는 Scene 번호\n  const isActive = useMemo(() => scene >= startScene && scene <= lastScene, [scene, startScene, lastScene]); // 현재 Scene 번호가 활동 범위인지 여부\n\n  // Start Scene과 End Scene을 반영한 상대적은 Scene 번호\n  const relativeScene = useMemo(\n    () => Math.min(Math.max(scene - startScene, 0), shortDest.length - 1),\n    [scene, startScene, shortDest],\n  );\n\n  // Progress가 증가함에 따라 이동하게 될 다음 Scene의 Short Number\n  const nextShort = useMemo(() => {\n    if (progress > 0 && scene < lastScene) return short + 1;\n    if (progress < 0 && scene > startScene) return shortDest[relativeScene - 1];\n    return short;\n  }, [progress, scene, short, startScene, lastScene, relativeScene]);\n\n  // Scene에 해당하는 목표 Short 번호에 맞게 다음 Short 번호를 설정합니다.\n  useEffect(() => {\n    const dest = shortDest[relativeScene];\n    if (!isActive || short === dest) return;\n\n    // Short의 변경이 필요하다면 Action 실행을 등록합니다.\n    const next = dest > short ? short + 1 : dest;\n    // useState로 short를 변경하게되면, Repaint가 수행되기 전에 short 번호가 변경되는 것 같습니다.\n    // 그로인해 short가 before load => 0 => 1이 아니라, before load => 1이 반영됩니다.\n    // requestAnimationFrame을 render 전에 다시 한번 요청하는 트릭을 사용해서 해결합니다.\n    callAfterRerender(() => setShort(next));\n    registAction(true);\n  }, [scene]);\n\n  // Short가 변경되면 Transalte 동작 후 목표 Short 번호에 맞게 Actrion을 진행합니다.\n  useEffect(() => {\n    if (!isActive || !init) return; // 첫 Mount에는 실행되지 않습니다.\n\n    const dest = shortDest[relativeScene];\n    const next = short + 1;\n    const isFinish = dest === short;\n\n    setTimeout(() => {\n      // Short가 목표치에 도달하면 Action을 종료합니다.\n      if (isFinish) registAction(false);\n      // Short가 목표치에 도달하지 목하면 다음 short로 이동합니다.\n      else setShort(next);\n    }, duration);\n  }, [short]);\n\n  useEffect(() => {\n    setInit(true);\n  }, []);\n\n  return {\n    short,\n    nextShort,\n  };\n}\n\nexport default UseSequence;\n","// state 혹은 prop의 변경이 repaint 이전에 전부 수행될 시, 중간과정이 생햑됩니다.\n// requestAnimationFrame을 render 전에 다시 한번 요청하는 트릭을 사용해서 해결합니다.\nexport const callAfterRerender = (cb: () => void) => {\n  requestAnimationFrame(() => requestAnimationFrame(cb));\n};\n","export default __webpack_public_path__ + \"static/media/title.c9b3e193.svg\";","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/title.svg';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.title;\n\ninterface TitleProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction Title({ short, nextShort, progress, stageWidth, stageHeight }: TitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('title', 'font-title-en'), []);\n\n  const { style } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <div style={style} ref={target} className={titleClass}>\n      <img src={svg} alt=\"title\" />\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.underLine;\n\ninterface UnderLineProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction UnderLine({ short, nextShort, progress, stageWidth, stageHeight }: UnderLineProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const underLineClass = useMemo(() => cxScene('under-line'), []);\n\n  const { style } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return <div className={underLineClass} style={style} ref={target} />;\n}\n\nexport default UnderLine;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.subTitle;\n\ninterface SubTitleProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction SubTitle({ short, nextShort, progress, stageWidth, stageHeight }: SubTitleProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const titleClass = useMemo(() => cxScene('sub-title', 'font-title-ko'), []);\n\n  const { style } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <span style={style} ref={target} className={titleClass}>\n      이솝 이야기: 늑대의 흉계\n    </span>\n  );\n}\n\nexport default SubTitle;\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\nimport classNames from 'classnames/bind';\nimport Lottie from 'react-lottie';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/lion.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.lion;\n\ninterface LionProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nconst lottieOption = {\n  loop: true,\n  autoplay: true,\n  animationData: svg,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nfunction Lion({ short, nextShort, progress, stageWidth, stageHeight }: LionProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const [play, setPlay] = useState<boolean>(false);\n  const lionClass = useMemo(() => cxScene('lion'), []);\n\n  const { style } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  useEffect(() => {\n    setPlay(short < 4);\n  }, [short]);\n\n  return (\n    <div style={style} ref={target} className={lionClass}>\n      <Lottie options={lottieOption} isPaused={!play} />\n    </div>\n  );\n}\n\nexport default Lion;\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\nimport classNames from 'classnames/bind';\nimport Lottie from 'react-lottie';\n\nimport data from 'static/animation/sequence01.json';\nimport svg from 'static/svg/scroll.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.scroll;\n\ninterface ScrollProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nconst lottieOption = {\n  loop: true,\n  autoplay: true,\n  animationData: svg,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nfunction Scroll({ short, nextShort, progress, stageWidth, stageHeight }: ScrollProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const [play, setPlay] = useState<boolean>(false);\n  const lionClass = useMemo(() => cxScene('scroll'), []);\n\n  const { style } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  useEffect(() => {\n    setPlay(short === 2);\n  }, [short]);\n\n  return (\n    <div style={style} ref={target} className={lionClass}>\n      <Lottie options={lottieOption} isPaused={!play} />\n    </div>\n  );\n}\n\nexport default Scroll;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.text;\n\ninterface TextProps {\n  short: number;\n  nextShort: number;\n  progress: number;\n  stageWidth: number;\n  stageHeight: number;\n}\n\nfunction Text({ short, nextShort, progress, stageWidth, stageHeight }: TextProps) {\n  const target = useRef<HTMLDivElement>(null);\n  const textCalss = useMemo(() => cxScene('text', 'font-main-ko'), []);\n\n  const { style } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: target.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth,\n    stageHeight,\n    data: info,\n  });\n\n  return (\n    <div style={style} ref={target} className={textCalss}>\n      <p>동물들의 왕 사자가 병이 들어 누워 있었습니다.</p>\n    </div>\n  );\n}\n\nexport default Text;\n","import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames/bind';\n\nimport data from 'static/animation/sequence01.json';\nimport styleScene01 from 'styles/page/scene01.module.scss';\nimport UseShort from 'modules/hooks/use-short';\nimport UseSequence from 'modules/hooks/use-sequence';\n\nimport Title from 'components/sequence01/title';\nimport UnderLine from 'components/sequence01/under-line';\nimport SubTitle from 'components/sequence01/sub-title';\nimport Lion from 'components/sequence01/lion';\nimport Scroll from 'components/sequence01//scroll';\nimport Text from 'components/sequence01/text';\n\nconst cxScene = classNames.bind(styleScene01);\nconst info = data.cuts.container;\n\ninterface Sequence01Props {\n  scene: number;\n  progress: number;\n  appWidth: number;\n  appHeight: number;\n  registAction: (regist: boolean) => void;\n}\n\nfunction Sequence01({ scene, progress, appWidth, appHeight, registAction }: Sequence01Props) {\n  const container = useRef<HTMLDivElement>(null);\n  const stage = useRef<HTMLDivElement>(null);\n\n  const containerClass = useMemo(() => cxScene('container'), []);\n  const stageClass = useMemo(() => cxScene('stage'), []);\n\n  const { short, nextShort } = UseSequence({ scene, progress, data, registAction });\n  const { style, targetWidth, targetHeight } = UseShort({\n    short,\n    nextShort,\n    progress,\n    target: container.current,\n    duration: data.duration,\n    shortEnd: data.shortEnd,\n    stageWidth: appWidth,\n    stageHeight: appHeight,\n    data: info,\n  });\n\n  //  하위 컴포너트가 필요한 것은 Container의 사이즈가 아니라 Stage의 사이즈입니다.\n  const [stageWidth, stageHeight] = useMemo(() => {\n    if (!stage.current) return [0, 0];\n    return [stage.current.clientWidth, stage.current.clientHeight];\n  }, [stage.current, targetWidth, targetHeight]);\n\n  return (\n    <div className={containerClass} style={style} ref={container}>\n      <div className={stageClass} ref={stage}>\n        <Title\n          short={short}\n          nextShort={nextShort}\n          progress={progress}\n          stageWidth={stageWidth}\n          stageHeight={stageHeight}\n        />\n        <UnderLine\n          short={short}\n          nextShort={nextShort}\n          progress={progress}\n          stageWidth={stageWidth}\n          stageHeight={stageHeight}\n        />\n        <SubTitle\n          short={short}\n          nextShort={nextShort}\n          progress={progress}\n          stageWidth={stageWidth}\n          stageHeight={stageHeight}\n        />\n        <Lion\n          short={short}\n          nextShort={nextShort}\n          progress={progress}\n          stageWidth={stageWidth}\n          stageHeight={stageHeight}\n        />\n        <Scroll\n          short={short}\n          nextShort={nextShort}\n          progress={progress}\n          stageWidth={stageWidth}\n          stageHeight={stageHeight}\n        />\n        <Text\n          short={short}\n          nextShort={nextShort}\n          progress={progress}\n          stageWidth={stageWidth}\n          stageHeight={stageHeight}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Sequence01;\n","import React, { useState, useCallback, useRef, useMemo, useEffect } from 'react';\n\nimport useScrollEvent from 'modules/hooks/use-scroll-event';\nimport Sequence01 from 'components/sequence01';\nimport animation from 'static/animation/index.json';\nimport 'styles/main.scss';\n\nfunction App() {\n  const [scene, setScene] = useState(0); // 현재 Scene 번호\n  const [width, setWidth] = useState(document.body.clientWidth); // Application Width\n  const [height, setHeight] = useState(document.body.clientHeight); // Application Height\n\n  const actionCnt = useRef<number>(0); // 현재 Action 수행중인 Sequence 갯수\n  const isMaxScene = useMemo(() => scene === animation.totalScene - 1, [scene]); // 현재 Scene이 마지막인지 여부\n  const isMinScene = useMemo(() => scene === 0, [scene]); // 현재 Scene이 처음인지 여부\n\n  const { dist, initDist, setFreeze, wheelCallback, touchStartCallback, touchMoveCallback, touchEndCallback } =\n    useScrollEvent({ wheelSensitive: animation.deletaSensitive });\n\n  // 다음 Scene을 진행합니다.\n  const moveNextScene = useCallback(() => {\n    if (!isMaxScene) setScene(scene + 1);\n    if (dist) initDist();\n  }, [isMaxScene, scene, dist]);\n\n  // 이전 Scene을 진행합니다.\n  const movePrevScene = useCallback(() => {\n    if (!isMinScene) setScene(scene - 1);\n    if (dist) initDist();\n  }, [isMinScene, scene, dist]);\n\n  // Sequence의 Action 실행/종료를 보고 받습니다.\n  const registAction = useCallback(\n    (regist: boolean) => {\n      if (regist) actionCnt.current += 1;\n      else if (actionCnt.current > 0) actionCnt.current -= 1;\n\n      // Action이 실행중인 Sequence가 하나라도 있으면 스크롤 이벤트를 중단합니다.\n      setFreeze(actionCnt.current > 0);\n    },\n    [setFreeze],\n  );\n\n  // Scroll 이동 값이 일정 값 이상 도달하면 다음 Scene으로 이동합니다.\n  useEffect(() => {\n    if (Math.abs(dist) >= animation.actionStart) {\n      if (dist > 0 && !isMaxScene) moveNextScene();\n      else if (dist < 0 && !isMinScene) movePrevScene();\n    }\n  }, [dist]);\n\n  // Window 사이즈가 조정되면 Sequence Container들을 resize합니다.\n  const resizeCallback = useCallback(() => {\n    setWidth(document.body.clientWidth);\n    setHeight(document.body.clientHeight);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeCallback);\n    return () => window.removeEventListener('resize', resizeCallback);\n  }, [resizeCallback]);\n\n  return (\n    <div\n      className=\"App\"\n      onWheel={wheelCallback}\n      onTouchStart={touchStartCallback}\n      onTouchMove={touchMoveCallback}\n      onTouchEnd={touchEndCallback}\n    >\n      <Sequence01 scene={scene} progress={dist} appWidth={width} appHeight={height} registAction={registAction} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scene01_container__1T_E7\",\"stage\":\"scene01_stage__dsnc2\",\"title\":\"scene01_title__2i5-l\",\"under-line\":\"scene01_under-line__31CWl\",\"sub-title\":\"scene01_sub-title__1UVJV\",\"lion\":\"scene01_lion__2uMb5\",\"scroll\":\"scene01_scroll__TyvOM\",\"text\":\"scene01_text__3AM-k\"};"],"sourceRoot":""}